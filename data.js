let data = `Аарон
Абрам
Аваз
Аввакум
Август
Августа
Августин
Августина
Авдей
Авдий
Авдотья
Авигея
Авксентий
Авраам
Аврор
Аврора
Автандил
Автоноя
Агап
Агапия
Агата
Агафон
Агафья
Аггей
Аглая
Агнес
Агнесса
Агнета
Агния
Агриппина
Агунда
Ада
Адам
Аделаида
Аделина
Аделия
Адель
Адельфина
Адиля
Адис
Адольф
Адриан
Адриана
Адриенна
Аза
Азалия
Азамат
Азарий
Азат
Азиза
Аида
Айганым
Айгерим
Айгуль
Айдар
Айжан
Айлин
Айнагуль
Айнур
Айрат
Акакий
Аким
Аксён
Аксинья
Акулина
Алан
Алана
Алдона
Алевтин
Алевтина
Александр
Александра
Александрина
Алексей
Алексий
Ален
Алёна
Алеся
Али
Алика
Алико
Алима
Алина
Алира
Алиса
Алихан
Алия
Алла
Алмаз
Алоис
Алсу
Алтжин
Альба
Альберт
Альберта
Альбина
Альвиан
Альвина
Альжбета
Альфия
Альфред
Альфреда
Аля
Амадей
Амадеус
Амалия
Амаль
Аманда
Амаяк
Амвросий
Амелия
Амин
Амина
Амира
Анаис
Анаит
Анастасий
Анастасия
Анатолий
Анвар
Ангел
Ангелина
Андоим
Андрей
Андриана
Андрон
Андрэ
Анеля
Анжей
Анжела
Анжелика
Анжиолетта
Аникита
Анисим
Анисия
Анисья
Анита
Анна
Антип
Антон
Антонин
Антонина
Ануфрий
Анфим
Анфиса
Анэля
Аполлинарий
Аполлинария
Аполлония
Апполинарий
Арабелла
Арам
Ариадна
Ариана
Арий
Арина
Аристарх
Аркадий
Арман
Армен
Арно
Арнольд
Арон
Арсен
Арсений
Арслан
Артамон
Артем
Артемида
Артемий
Артур
Архелия
Архип
Архипп
Арье
Арьяна
Асель
Асида
Асия
Аскольд
Ассоль
Астра
Астрид
Ася
Аурелия
Афанасий
Афанасия
Афиноген
Ахмет
Ашот
Аэлита
Аюна
Бажена
Бахрам
Беата
Беатриса
Бежен
Белинда
Белла
Бенедикт
Бенедикта
Берек
Береслава
Бернар
Берта
Биргит
Бирута
Богдан
Богдана
Боголюб
Божена
Болеслав
Бонифаций
Бореслав
Борис
Борислав
Борислава
Боян
Бриллиант
Бронислав
Бронислава
Бруно
Булат
Вадим
Валентин
Валентина
Валерий
Валерия
Валерьян
Вальдемар
Вальтер
Ванда
Ванесса
Варвара
Вардан
Варлаам
Варлам
Варфоломей
Василий
Василина
Василиса
Васса
Ватслав
Вацлав
Велизар
Велимир
Велор
Венди
Венедикт
Венера
Вениамин
Вера
Верона
Вероника
Версавия
Веселина
Весна
Весняна
Веста
Вета
Ветта
Вида
Видана
Викентий
Виктор
Викторина
Виктория
Вилен
Вилена
Вилли
Вилора
Вильгельм
Винетта
Виоланта
Виолетта
Виргиния
Виринея
Виссарион
Вита
Виталий
Виталина
Витаутас
Витольд
Влад
Влада
Владимир
Владислав
Владислава
Владлен
Владлена
Влас
Власий
Властилина
Володар
Вольдемар
Всеволод
Вячеслав
Габи
Габриеле
Габриэлла
Гавриил
Гаврила
Гай
Гайдар
Галактион
Галина
Галия
Гамлет
Гарри
Гаспар
Гастон
Гаянэ
Гаяс
Гевор
Геворг
Гелана
Геласий
Гелена
Гелианна
Гелла
Гений
Геннадий
Генри
Генриетта
Генрих
Георгий
Георгина
Гера
Геральд
Герасим
Герда
Герман
Гермоген
Гертруда
Глафира
Глеб
Гликерия
Глория
Гоар
Говхар
Гордей
Гордон
Горислав
Горица
Гортензия
Градимир
Гражина
Граф
Грета
Григорий
Гузель
Гулия
Гульмира
Гульназ
Гульнара
Гульшат
Гуннхильда
Гурий
Густав
Гюзель
Гюльджан
Давид
Давлат
Давыд
Дайна
Далия
Дамиан
Дамир
Дамира
Дан
Дана
Даниил
Данила
Данислав
Даниэла
Дания
Данна
Данута
Даньяр
Дар
Дара
Дарерка
Дарина
Дария
Дарья
Дарьяна
Даша
Даяна
Дебора
Дементий
Демид
Демократ
Демьян
Денис
Джамал
Джамиля
Джанет
Джеймс
Джема
Джемма`;
class TrieNode {
    constructor() {
      this.children = {};
      this.isWord = false;
      this.info = null
    }
  }
//создаем полиморфное дерево
  class Trie {
    constructor() {// создаем пустой узел
      this.root = new TrieNode();
    }
    insert(word, data) {// метод принимает слово
      let node = this.root;
      for (const char of word) { // перебираем каждую букву
        if (!node.children[char]) { // если буквы нет в объекте
          node.children[char] = new TrieNode(); // тогда присваеваем букву 
          //в объект и добавляем ссылку
        }
        node = node.children[char];
      }
      node.info = data
      node.isWord = true;// если слова закончилось тогда присваеваем флаг true
    }
    serialize(node = this.root, prefix = "") {
      let result = [];
      if (node.isWord) result.push(prefix);
      for (const char in node.children) {
        result = result.concat(this.serialize(node.children[char], prefix + char));
      }
      return result;
    }
  }
let arrElem = data.split("\n").map((elem)=>({value:elem,data:new Date().getTime()}))
let arr = []
for (let index = 0; index < 10; index++) {
    let newArr = []
    for (let j = 0; j < arrElem.length; j++) {
        newArr.push({value:arrElem[j].value+index,data:new Date().getTime() })
        
    }
    arr = [...arr, ...newArr]
}

const trie = new Trie();
arr.forEach((elem)=>trie.insert(elem.value,elem))
export {arr, trie}
